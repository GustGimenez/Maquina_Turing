
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AutomatoUI;

import automatos.FileManager;
import automatos.No;
import automatos.Resolve;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Point;
import java.awt.geom.Point2D;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author fabio
 */
public class Tela extends javax.swing.JFrame {

    private final Automato automato;
    private Vertice vertice;
    private Aresta aresta;
    private ViewPanel view;
    private ViewPanel view2;
    private ViewPanel view3;
    private int numFitas;

    private No cam;
    private No camAux;
    private int camCount;
    private final boolean gr;
    private int auxX, auxY;
    private String strTrans;
    private int[] step;
    private String[] TPFitaText;

    private int op; // 0 - novo estado, 1 -  nova transição, 2 - remover, 3 - arrastar

    private final int NOVO_ESTADO = 0;
    private final int NOVA_TRANSICAO = 1;
    private final int REMOVER = 2;
    private final int ARRASTAR = 3;
    private final char VAZIO = '\u25A1';

    private DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.CYAN);

    public int getNumFItas() {
        return this.numFitas;
    }

    public void setNumFitas(int num) {
        this.numFitas = num;
        this.automato.setNumFitas(numFitas);
        ((DefaultTableModel) this.InputTable.getModel()).setRowCount(num);

    }

    /*
        *Inicializa as Views
        *Deve ser chamado ANTES initComponents
     */
    private void initTela() {
        this.view = new ViewPanel(automato);
        this.view2 = new ViewPanel(automato);
        this.view2.setBackground(Color.white);
        this.view3 = new ViewPanel(automato);
        this.view3.setBackground(Color.white);

    }

    /*
        *Setar valores iniciais dos componentes
        *Deve ser chamado DEPOIS initComponents
     */
    private void setComp() {
        this.InputTable.add(this.CBDirection);
        this.view.add(this.InputTable);
        this.InputTable.setVisible(false);
        this.op = this.NOVO_ESTADO; //começa com novo estado
        this.view.setBackground(Color.white);
        this.TelaPanel.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        this.TelaPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        this.setLayout(null);
        TableColumn tc = this.InputTable.getColumnModel().getColumn(2);
        tc.setCellEditor(new DefaultCellEditor(this.CBDirection));
        //  this.setExtendedState(this.getExtendedState() | javax.swing.JFrame.MAXIMIZED_BOTH);
        this.novaTransButton.setEnabled(false);
        this.novoEstadoButton.setEnabled(false);
        this.removerButton.setEnabled(false);
        this.arrastarButton.setEnabled(false);
        this.op = -2;
    }

    public Tela() {
        automato = new Automato();
        this.gr = false;
        this.initTela();
        initComponents();
        this.setComp();

    }

    /*
        *Herdado do projeto de automatos
     */
    public Tela(Automato a) {
        this.gr = true;
        this.automato = a;
        this.initTela();
        initComponents();
        this.setComp();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Menu = new javax.swing.JPopupMenu();
        PopUpItem1 = new javax.swing.JCheckBoxMenuItem();
        PopUpItem2 = new javax.swing.JCheckBoxMenuItem();
        CriarLabel_PopUpItem3 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        AutomatoLayout = new javax.swing.JPanel();
        PanelAutomato = new javax.swing.JPanel();
        TelaPanel = new javax.swing.JScrollPane(this.view);
        EstadosBtnPanel = new javax.swing.JPanel();
        novoEstadoButton = new javax.swing.JButton();
        novaTransButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        arrastarButton = new javax.swing.JButton();
        CBDirection = new javax.swing.JComboBox<>();
        PanelStep = new javax.swing.JPanel();
        StepPanel = new javax.swing.JScrollPane(this.view2);
        StepBtnPanel = new javax.swing.JPanel();
        StepBtn = new javax.swing.JButton();
        ExitStepBtn = new javax.swing.JButton();
        StringLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        numItLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TPFita1 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        TPFita2 = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        TPFita3 = new javax.swing.JTextPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        TPFita4 = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        TPFita5 = new javax.swing.JTextPane();
        PanelMultEntradas = new javax.swing.JPanel();
        TablePanel = new javax.swing.JPanel();
        TabelPanel = new javax.swing.JScrollPane();
        MultEntradaTable = new javax.swing.JTable();
        MultEntradassBtnPanel = new javax.swing.JPanel();
        ExitMultBtn = new javax.swing.JButton();
        ExecBtn = new javax.swing.JButton();
        AddLineBtn = new javax.swing.JButton();
        MultScrollPane1 = new javax.swing.JScrollPane(this.view3);
        InputTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        File_menu = new javax.swing.JMenu();
        novaMaquinaMenu = new javax.swing.JMenuItem();
        save_menu = new javax.swing.JMenuItem();
        load_menu = new javax.swing.JMenuItem();
        Menu1 = new javax.swing.JMenu();
        mi_Exe1 = new javax.swing.JMenuItem();
        mi_ExeStep = new javax.swing.JMenuItem();
        mi_MultEntradas = new javax.swing.JMenuItem();

        PopUpItem1.setText("Inicial");
        PopUpItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopUpItem1ActionPerformed(evt);
            }
        });
        Menu.add(PopUpItem1);

        PopUpItem2.setText("Final");
        PopUpItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopUpItem2ActionPerformed(evt);
            }
        });
        Menu.add(PopUpItem2);

        CriarLabel_PopUpItem3.setLabel("Criar Label");
        CriarLabel_PopUpItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriarLabel_PopUpItem3ActionPerformed(evt);
            }
        });
        Menu.add(CriarLabel_PopUpItem3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        AutomatoLayout.setLayout(new java.awt.CardLayout());

        TelaPanel.setBackground(new java.awt.Color(204, 204, 204));
        TelaPanel.setAutoscrolls(true);
        TelaPanel.setPreferredSize(new java.awt.Dimension(600, 600));
        TelaPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TelaPanelMouseDragged(evt);
            }
        });
        TelaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TelaPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TelaPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TelaPanelMouseReleased(evt);
            }
        });
        TelaPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TelaPanelKeyTyped(evt);
            }
        });

        EstadosBtnPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        novoEstadoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/EstadoB.png"))); // NOI18N
        novoEstadoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoEstadoButtonActionPerformed(evt);
            }
        });

        novaTransButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/transicaoB.png"))); // NOI18N
        novaTransButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaTransButtonActionPerformed(evt);
            }
        });

        removerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/DeleteB.png"))); // NOI18N
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });

        arrastarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cursorB.png"))); // NOI18N
        arrastarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrastarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EstadosBtnPanelLayout = new javax.swing.GroupLayout(EstadosBtnPanel);
        EstadosBtnPanel.setLayout(EstadosBtnPanelLayout);
        EstadosBtnPanelLayout.setHorizontalGroup(
            EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(novoEstadoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(novaTransButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(arrastarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        EstadosBtnPanelLayout.setVerticalGroup(
            EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(novoEstadoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(novaTransButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(arrastarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        CBDirection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "R", "L", "S" }));

        javax.swing.GroupLayout PanelAutomatoLayout = new javax.swing.GroupLayout(PanelAutomato);
        PanelAutomato.setLayout(PanelAutomatoLayout);
        PanelAutomatoLayout.setHorizontalGroup(
            PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAutomatoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TelaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                    .addComponent(EstadosBtnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelAutomatoLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CBDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        PanelAutomatoLayout.setVerticalGroup(
            PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAutomatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EstadosBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TelaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelAutomatoLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CBDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        AutomatoLayout.add(PanelAutomato, "AutomatoEdit");

        StepBtn.setText("Começar");
        StepBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StepBtnActionPerformed(evt);
            }
        });

        ExitStepBtn.setText("Sair");
        ExitStepBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitStepBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Número de Passos :");

        numItLabel.setText("______________");

        TPFita1.setEditable(false);
        jScrollPane6.setViewportView(TPFita1);

        jScrollPane7.setViewportView(TPFita2);

        jScrollPane8.setViewportView(TPFita3);

        jScrollPane9.setViewportView(TPFita4);

        jScrollPane10.setViewportView(TPFita5);

        javax.swing.GroupLayout StepBtnPanelLayout = new javax.swing.GroupLayout(StepBtnPanel);
        StepBtnPanel.setLayout(StepBtnPanelLayout);
        StepBtnPanelLayout.setHorizontalGroup(
            StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StepBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane10)
                    .addComponent(jScrollPane9)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StepBtnPanelLayout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(StringLabel)
                        .addContainerGap(303, Short.MAX_VALUE))
                    .addGroup(StepBtnPanelLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StepBtn)
                            .addComponent(ExitStepBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numItLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        StepBtnPanelLayout.setVerticalGroup(
            StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StepBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(StepBtnPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(StepBtnPanelLayout.createSequentialGroup()
                        .addComponent(StepBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(StepBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StepBtnPanelLayout.createSequentialGroup()
                                .addComponent(ExitStepBtn)
                                .addGap(50, 50, 50)
                                .addComponent(StringLabel))
                            .addComponent(numItLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelStepLayout = new javax.swing.GroupLayout(PanelStep);
        PanelStep.setLayout(PanelStepLayout);
        PanelStepLayout.setHorizontalGroup(
            PanelStepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelStepLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelStepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StepBtnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StepPanel))
                .addContainerGap())
        );
        PanelStepLayout.setVerticalGroup(
            PanelStepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelStepLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StepPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StepBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AutomatoLayout.add(PanelStep, "AutomatoStep");

        MultEntradaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        MultEntradaTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TabelPanel.setViewportView(MultEntradaTable);
        if (MultEntradaTable.getColumnModel().getColumnCount() > 0) {
            MultEntradaTable.getColumnModel().getColumn(0).setResizable(false);
            MultEntradaTable.getColumnModel().getColumn(1).setResizable(false);
        }

        ExitMultBtn.setText("Sair");
        ExitMultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMultBtnActionPerformed(evt);
            }
        });

        ExecBtn.setText("Executar");
        ExecBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecBtnActionPerformed(evt);
            }
        });

        AddLineBtn.setText("Inserir Linha");
        AddLineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddLineBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MultEntradassBtnPanelLayout = new javax.swing.GroupLayout(MultEntradassBtnPanel);
        MultEntradassBtnPanel.setLayout(MultEntradassBtnPanelLayout);
        MultEntradassBtnPanelLayout.setHorizontalGroup(
            MultEntradassBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MultEntradassBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MultEntradassBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ExitMultBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(AddLineBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(ExecBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MultEntradassBtnPanelLayout.setVerticalGroup(
            MultEntradassBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MultEntradassBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ExecBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddLineBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExitMultBtn)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        MultScrollPane1.setAutoscrolls(true);
        MultScrollPane1.setPreferredSize(new java.awt.Dimension(600, 600));

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MultScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(MultEntradassBtnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addComponent(TabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MultEntradassBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 151, Short.MAX_VALUE))
            .addComponent(MultScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelMultEntradasLayout = new javax.swing.GroupLayout(PanelMultEntradas);
        PanelMultEntradas.setLayout(PanelMultEntradasLayout);
        PanelMultEntradasLayout.setHorizontalGroup(
            PanelMultEntradasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelMultEntradasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelMultEntradasLayout.setVerticalGroup(
            PanelMultEntradasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMultEntradasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        AutomatoLayout.add(PanelMultEntradas, "AutomatoMult");

        InputTable.setBackground(new java.awt.Color(204, 204, 204));
        InputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"$", null, null}
            },
            new String [] {
                "Lê", "Escreve", "Vai para"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        InputTable.setGridColor(new java.awt.Color(204, 204, 255));
        InputTable.getTableHeader().setReorderingAllowed(false);
        InputTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                InputTableFocusLost(evt);
            }
        });
        InputTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                InputTableComponentHidden(evt);
            }
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                InputTableComponentMoved(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                InputTableComponentShown(evt);
            }
        });
        InputTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                InputTablePropertyChange(evt);
            }
        });
        InputTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InputTableKeyTyped(evt);
            }
        });

        File_menu.setText("Arquivos");

        novaMaquinaMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        novaMaquinaMenu.setText("Nova Máquina");
        novaMaquinaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaMaquinaMenuActionPerformed(evt);
            }
        });
        File_menu.add(novaMaquinaMenu);

        save_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save_menu.setText("Salvar");
        save_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_menuActionPerformed(evt);
            }
        });
        File_menu.add(save_menu);

        load_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        load_menu.setText("Carregar");
        load_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_menuActionPerformed(evt);
            }
        });
        File_menu.add(load_menu);

        jMenuBar1.add(File_menu);

        Menu1.setText("Executar");

        mi_Exe1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        mi_Exe1.setText("Uma entrada");
        mi_Exe1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_Exe1ActionPerformed(evt);
            }
        });
        Menu1.add(mi_Exe1);

        mi_ExeStep.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        mi_ExeStep.setText("Passo a passo");
        mi_ExeStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_ExeStepActionPerformed(evt);
            }
        });
        Menu1.add(mi_ExeStep);

        mi_MultEntradas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        mi_MultEntradas.setText("Multiplas Entradas");
        mi_MultEntradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_MultEntradasActionPerformed(evt);
            }
        });
        Menu1.add(mi_MultEntradas);

        jMenuBar1.add(Menu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AutomatoLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(298, 298, 298)
                    .addComponent(InputTable, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(420, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AutomatoLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(295, 295, 295)
                    .addComponent(InputTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(304, Short.MAX_VALUE)))
        );

        if (InputTable.getColumnModel().getColumnCount() > 0) {
            InputTable.getColumnModel().getColumn(0).setResizable(false);
            InputTable.getColumnModel().getColumn(1).setResizable(false);
            InputTable.getColumnModel().getColumn(2).setResizable(false);
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TelaPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMouseReleased
        try {
            this.view.getS().setLine(0, 0, 0, 0);
            Point p = this.view.getMousePosition();
            Vertice v = automato.busca(p.x, p.y);

            if (evt.isPopupTrigger()) {
                if (this.vertice == null) {
                    this.PopUpItem1.setEnabled(false);
                    this.PopUpItem2.setEnabled(false);
                } else {

                    this.PopUpItem1.setSelected(this.vertice.isInicial());
                    this.PopUpItem2.setSelected(this.vertice.isFim());
                    this.PopUpItem1.setEnabled(true);
                    this.PopUpItem2.setEnabled(true);
                }
                this.Menu.show(this.view, p.x, p.y);
                return;
            }
            if (this.op == this.NOVA_TRANSICAO) {//transição
                if (v == null) {
                    return;
                }
                this.aresta = this.automato.addAresta(this.vertice, v);
                if (this.aresta.getTipo() == 4) {
                    this.auxX = this.vertice.getX() - 114;
                    if (auxX < 6) {
                        auxX = 6;
                    }
                    this.auxY = this.vertice.getY() + 25;

                } else {
                    this.auxX = (this.vertice.getX() + p.x) / 2;
                    if (auxX < 6) {
                        auxX = 6;
                    }
                    this.auxY = (this.vertice.getY() + p.y) / 2 - 10;
                }
                this.cleanInput();
                this.InputTable.setVisible(true);
                this.InputTable.requestFocus();
                this.InputTable.editCellAt(0, 0);
                this.InputTable.changeSelection(0, 0, false, false);

            }

        } catch (NullPointerException e) {

        } finally {
            this.TelaPanel.repaint();
            // this.InputTable.setLocation(this.auxX, this.auxY);
            this.InputTable.setBounds(this.auxX, this.auxY, 255, 16 * this.numFitas);
        }
    }//GEN-LAST:event_TelaPanelMouseReleased

    private void TelaPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMousePressed
        try {
            if (vertice != null) {
                this.vertice.setFocus(false);
            }
            Point p = this.view.getMousePosition();
            if (this.InputTable.isVisible()) {
                verificaClick(p.x, p.y);
            }
            this.vertice = automato.busca(p.x, p.y);
            if (vertice != null) {
                this.vertice.setFocus(true);
            }

            this.TelaPanel.repaint();
        } catch (NullPointerException e) {

        }
    }//GEN-LAST:event_TelaPanelMousePressed

    private void TelaPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMouseClicked
        Point p = this.view.getMousePosition();

        if (this.op == this.NOVO_ESTADO) {//novo estado
            if (this.vertice != null) {
                return;
            }
            this.vertice = new Vertice(p.x, p.y, "q");
            this.automato.addVertice(this.vertice);

        }
        if (this.op == this.REMOVER) {//remove
            if (this.vertice != null) {
                if (this.vertice.isInicial()) {
                    this.automato.setInicial(null);
                }
                this.automato.removeVertice(this.vertice);
            } else {
                this.automato.removeTransicao(p);
            }
            this.automato.verificaLabel(p);
        }
        if (evt.getClickCount() == 2) { // verificar edição de estado
            this.strTrans = this.automato.getStrTrans(p);
            this.aresta = this.automato.getArestas(p);
            if (strTrans != null) {
                this.auxX = p.x;
                this.auxY = p.y;
                this.setInputTable(this.strTrans);
                this.InputTable.setVisible(true);
                this.InputTable.requestFocus();
            }
        }
        this.TelaPanel.repaint();
    }//GEN-LAST:event_TelaPanelMouseClicked

    private void TelaPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMouseDragged
        try {
            if (this.op == this.ARRASTAR) {//arrastar

                Point p = this.view.getMousePosition();

                if (this.vertice != null) {
                    this.vertice.setX(p.x);
                    this.vertice.setY(p.y);
                }

            } else if (this.vertice != null && this.op == this.NOVA_TRANSICAO) {//transição
                Point2D p = (Point2D) this.view.getMousePosition();
                this.view.getS().setLine(p.getX(), p.getY(), vertice.getX(), vertice.getY());
            }

        } catch (NullPointerException e) {

        } finally {
            this.view.updateUI();
        }
    }//GEN-LAST:event_TelaPanelMouseDragged

    private void PopUpItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopUpItem1ActionPerformed
        if (this.automato.getInicial() != null) {
            this.automato.getInicial().setInicial(false);
        }
        this.vertice.setInicial(true);
        this.automato.setInicial(this.vertice);
        this.TelaPanel.repaint();
    }//GEN-LAST:event_PopUpItem1ActionPerformed

    private void PopUpItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopUpItem2ActionPerformed
        this.vertice.setFim(!this.vertice.isFim());
        this.TelaPanel.repaint();
    }//GEN-LAST:event_PopUpItem2ActionPerformed

    private void mi_Exe1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_Exe1ActionPerformed
        this.automato.setPos();
        String str;

        if (this.automato.getInicial() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um Estado inicial");
            return;
        }
        Resolve r = new Resolve(this.automato);
        EntradaUsuario ui = new EntradaUsuario(this, true);
        ui.setFitas(this.numFitas);
        ui.setVisible(true);
        if (ui.isValido()) {
            String[] aux = ui.getEntradas();
            if (r.busca(aux)) {
                str = "Aceito com " + r.getNumIt() + " passos !";
            } else {
                str = "Rejeitado com " + r.getNumIt() + " passos !";
            }
            ui.setEntradas(r.getResult());
            ui.setResultado(str);
            ui.setVisible(true);
        }


    }//GEN-LAST:event_mi_Exe1ActionPerformed

    private void mi_ExeStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_ExeStepActionPerformed
        this.automato.setPos();
        ArrayList<JTextPane> JTPs = new ArrayList();
        JTPs.add(this.TPFita1);
        JTPs.add(this.TPFita2);
        JTPs.add(this.TPFita3);
        JTPs.add(this.TPFita4);
        JTPs.add(this.TPFita5);
        for (int i = 0; i < 5; i++) {
            JTPs.get(i).setVisible(false);

        }

        if (this.automato.getInicial() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um Estado inicial");
            return;
        }
        Resolve r = new Resolve(this.automato);
        EntradaUsuario ui = new EntradaUsuario(this, true);
        ui.setFitas(this.numFitas);
        ui.setVisible(true);
        if (ui.isValido()) {
            String[] aux = ui.getEntradas();
            if (r.busca(aux)) {
                if (vertice != null) {
                    this.vertice.setFocus(false);
                }
                this.camCount = 0;
                this.cam = r.getCaminnho();
                this.numItLabel.setText(Integer.toString(r.getNumIt()));
                this.camAux = this.cam;
                this.StepPanel.repaint();
                this.TPFitaText = aux;
                this.step = new int[this.numFitas];

                for (int i = 0; i < aux.length; i++) {
                    this.step[i] = 6;
                    JTPs.get(i).setVisible(true);
                    JTPs.get(i).setText("□□□□□□" + aux[i] + "□□□□□□");
                }

                //this.TPFita.setText(this.TPFitaText);
                CardLayout card = (CardLayout) this.AutomatoLayout.getLayout();
                card.show(this.AutomatoLayout, "AutomatoStep");
            } else {
                JOptionPane.showMessageDialog(this, "Entrada rejeitada");
            }
        }


    }//GEN-LAST:event_mi_ExeStepActionPerformed

    private void StepBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StepBtnActionPerformed
        int i = 0;
        ArrayList<StringBuilder> str = new ArrayList();
        ArrayList<JTextPane> JTPs = new ArrayList();
        JTPs.add(this.TPFita1);
        JTPs.add(this.TPFita2);
        JTPs.add(this.TPFita3);
        JTPs.add(this.TPFita4);
        JTPs.add(this.TPFita5);

        for (i = 0; i < this.numFitas; i++) {
            StringBuilder sb = new StringBuilder(JTPs.get(i).getText());
            str.add(sb);
        }

        if (this.camCount == 2) {
            for (int j = 0; j < this.numFitas; j++) {
                this.step[j] = 6;
            }
            this.camCount = 0;
            this.StepBtn.setText("Começar");
            if (this.vertice != null) {
                this.vertice.setFocus(false);
            }
        } else {

            if (this.camCount != 1) {
                this.camCount = 1;
                this.StepBtn.setText("Próximo");
                this.vertice = this.automato.setSelected(this.camAux.getEstado());
                try {
                    for (i = 0; i < this.numFitas; i++) {
                        JTPs.get(i).getHighlighter().removeAllHighlights();
                        JTPs.get(i).getHighlighter().addHighlight(this.step[i], this.step[i] + 1, highlightPainter);
                    }
                } catch (BadLocationException ex) {
                    Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                if (this.camAux.getProx() != null) {

                    if (this.vertice != null) {
                        this.vertice.setFocus(false);
                    }
                    for (i = 0; i < this.numFitas; i++) {
                        if (str.get(i).charAt(this.step[i]) != camAux.getEscreve().get(i)) {
                            str.get(i).setCharAt(this.step[i], camAux.getEscreve().get(i));
                            JTPs.get(i).setText(str.get(i).toString());
                        }
                        if (camAux.getDirecao().get(i).equals('R')) { //Direção do highlight
                            this.step[i] += 1;
                        } else {
                            this.step[i] -= 1;
                        }
                    }

                    try {
                        for (i = 0; i < this.numFitas; i++) {
                            JTPs.get(i).getHighlighter().removeAllHighlights();
                            JTPs.get(i).getHighlighter().addHighlight(this.step[i], this.step[i] + 1, highlightPainter);
                        }

                    } catch (BadLocationException ex) {
                        Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                    }
//                }
//                if (this.camAux.getProx() != null) {
                    this.camAux = this.camAux.getProx();
                    this.vertice = this.automato.setSelected(this.camAux.getEstado());
                } else {
                    for (int j = 0; j < this.numFitas; j++) {
                        this.step[j] = 6;
                        JTPs.get(j).setText("□□□□□□" + this.TPFitaText[j] + "□□□□□□");

                    }
                    this.camCount = 2;
                    this.camAux = this.cam;
                    this.StepBtn.setText("Recomeçar");
                    this.vertice = null;

                }

            }
        }
        this.StepPanel.repaint();
    }//GEN-LAST:event_StepBtnActionPerformed

    private void ExitStepBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitStepBtnActionPerformed
        CardLayout card = (CardLayout) this.AutomatoLayout.getLayout();
        card.show(this.AutomatoLayout, "AutomatoEdit");
    }//GEN-LAST:event_ExitStepBtnActionPerformed

    private void mi_MultEntradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_MultEntradasActionPerformed
        this.MultScrollPane1.repaint();
        DefaultTableModel model = (DefaultTableModel) this.MultEntradaTable.getModel();
        model.setColumnCount(0);
        for (int i = 0; i < this.numFitas; i++) {
            model.addColumn("Entrada" + i);
        }
        model.addColumn("Numero de passos");
        model.addColumn("Resultado");

        model.addRow(new Object[this.numFitas + 2]);

        CardLayout card = (CardLayout) this.AutomatoLayout.getLayout();
        card.show(this.AutomatoLayout, "AutomatoMult");
    }//GEN-LAST:event_mi_MultEntradasActionPerformed

    private void ExitMultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMultBtnActionPerformed
        CardLayout card = (CardLayout) this.AutomatoLayout.getLayout();
        card.show(this.AutomatoLayout, "AutomatoEdit");
    }//GEN-LAST:event_ExitMultBtnActionPerformed

    private void ExecBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecBtnActionPerformed
        int i = this.MultEntradaTable.getRowCount();
        int contTransicoes = 0;

        DefaultTableModel model = (DefaultTableModel) this.MultEntradaTable.getModel();
        this.automato.setPos();
        //    this.MultEntradaTable.getCellEditor().stopCellEditing();
        if (this.automato.getInicial() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um Estado inicial");
            return;
        }
        Resolve r = new Resolve(this.automato);
        for (int j = 0; j < i; j++) {//Para a qntdade de linhas da tabela
            String[] aux = new String[this.numFitas];
            for (int k = 0; k < this.numFitas; k++) {//pega cada entrada
                aux[k] = (String) model.getValueAt(j, k);
                if ("".equals(aux[k]) || aux[k] == null) {
                    aux[k] = "" + this.VAZIO;
                }
            }

            if (aux != null) {
                if (r.busca(aux)) {
                    contTransicoes = r.getNumIt();
                    model.setValueAt("Aceito", j, this.numFitas + 1);
                    model.setValueAt(contTransicoes, j, this.numFitas);
                } else {
                    model.setValueAt("Rejeitado", j, this.numFitas + 1);
                    model.setValueAt(contTransicoes, j, this.numFitas);
                }
            }

        }
    }//GEN-LAST:event_ExecBtnActionPerformed

    private void AddLineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddLineBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.MultEntradaTable.getModel();
        model.addRow(new Object[2]);
    }//GEN-LAST:event_AddLineBtnActionPerformed

    private void novoEstadoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoEstadoButtonActionPerformed
        this.op = this.NOVO_ESTADO;
    }//GEN-LAST:event_novoEstadoButtonActionPerformed

    private void novaTransButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaTransButtonActionPerformed
        this.op = this.NOVA_TRANSICAO;
    }//GEN-LAST:event_novaTransButtonActionPerformed

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        this.op = this.REMOVER;
    }//GEN-LAST:event_removerButtonActionPerformed

    private void arrastarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrastarButtonActionPerformed
        this.op = this.ARRASTAR;
    }//GEN-LAST:event_arrastarButtonActionPerformed

    private void CriarLabel_PopUpItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriarLabel_PopUpItem3ActionPerformed
        // TODO add your handling code here:
        String label = JOptionPane.showInputDialog("Insira o label!");
        this.automato.criarLabel(label, this.vertice);
        this.TelaPanel.repaint();
    }//GEN-LAST:event_CriarLabel_PopUpItem3ActionPerformed

    private void InputTableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_InputTableComponentShown


    }//GEN-LAST:event_InputTableComponentShown

    private void InputTableComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_InputTableComponentMoved
        int x = this.InputTable.getLocation().x;
        int y = this.InputTable.getLocation().y;
        if (x == 5 && y == 5) {
            this.InputTable.setLocation(this.auxX, this.auxY);
        }


    }//GEN-LAST:event_InputTableComponentMoved

    private void InputTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_InputTablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_InputTablePropertyChange

    private void InputTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InputTableFocusLost
        //    this.InputTable.setVisible(false);
    }//GEN-LAST:event_InputTableFocusLost

    private void InputTableComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_InputTableComponentHidden
        if (this.aresta == null) {
            return;
        }
        String texto = "";

        //Pega os valores da tabela, ignorando espacos
        for (int i = 0; i < this.numFitas; i++) {

            String text1 = ((String) this.InputTable.getValueAt(i, 0)).trim();
            String text2 = ((String) this.InputTable.getValueAt(i, 1)).trim();
            String text3 = ((String) this.InputTable.getValueAt(i, 2)).trim();

            //substitui vazio por caracter quadrado
            if (text1 == null || text1.equals("")) {
                text1 = "\u25A1";
            }
            if (text2 == null || text2.equals("")) {
                text2 = "\u25A1";
            }

            //Default de andamento da fita: Direita
            if (text3 == null || text3.equals("")) {
                text3 = "R";
            }
            text1 = "" + text1.charAt(0);
            text2 = "" + text2.charAt(0);
            text3 = "" + text3.charAt(0);

            text1 = text1.replaceAll("';'", "&pv").replaceAll("'|'", "&bv");
            text2 = text2.replaceAll("';'", "&pv").replaceAll("'|'", "&bv");
            text3 = text3.replaceAll("';'", "&pv").replaceAll("'|'", "&bv");
            //Forma string que será armazenada. Apenas 1 caractere por campo
            texto += text1 + ";" + text2 + ";" + text3;
            if (i < this.numFitas - 1) {
                texto += "|";
            }
        }
        this.aresta.addTransicao(texto, this.strTrans);
        this.TelaPanel.repaint();
        this.strTrans = null;
    }//GEN-LAST:event_InputTableComponentHidden

    private void InputTableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputTableKeyTyped
        if ((int) evt.getKeyChar() == 27) {// digitou esc
            this.verificaClick(0, 0); //Esconde tela
        }
    }//GEN-LAST:event_InputTableKeyTyped

    private void TelaPanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TelaPanelKeyTyped
        if ((int) evt.getKeyChar() == 27) {
            this.verificaClick(0, 0);
        }
    }//GEN-LAST:event_TelaPanelKeyTyped

    private void save_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_menuActionPerformed
        FileManager fm;
        fm = new FileManager();
        this.automato.setPos();
        try {
            fm.saveMT(this.automato);
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_save_menuActionPerformed

    private void load_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_menuActionPerformed
        FileManager fm;
        this.InputTable.setVisible(false);
        fm = new FileManager();
        try {
            automato.getArestas().removeAll(automato.getArestas());
            automato.getVertices().removeAll(automato.getVertices());
            fm.carregaMT(automato);
            this.setNumFitas(automato.getNumFitas());
            this.novaTransButton.setEnabled(true);
            this.novoEstadoButton.setEnabled(true);
            this.removerButton.setEnabled(true);
            this.arrastarButton.setEnabled(true);
            this.op = ARRASTAR;
        } catch (ParserConfigurationException | SAXException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.TelaPanel.repaint();
    }//GEN-LAST:event_load_menuActionPerformed

    private void novaMaquinaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaMaquinaMenuActionPerformed
        EntradaNumFitas enf = new EntradaNumFitas(this, true);
        enf.setVisible(true);
        this.numFitas = enf.getNumFitas();
        this.novaTransButton.setEnabled(true);
        this.novoEstadoButton.setEnabled(true);
        this.removerButton.setEnabled(true);
        this.arrastarButton.setEnabled(true);
        this.op = NOVO_ESTADO;

    }//GEN-LAST:event_novaMaquinaMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });

    }

    private void verificaClick(int x, int y) {
        int tableX, tableY;

        tableX = this.InputTable.getLocation().x;
        tableY = this.InputTable.getLocation().y;

        if (x < tableX || x > tableX + 225 || y < tableY || y > tableY + 16 * this.numFitas) {
            if (this.InputTable.isEditing()) {
                this.InputTable.getCellEditor().stopCellEditing();
            }
            this.InputTable.setVisible(false);
        }
    }

    private void cleanInput() {
        DefaultTableModel model = (DefaultTableModel) this.InputTable.getModel();
        model.setNumRows(this.numFitas);

        for (int i = 0; i < this.numFitas; i++) {
            this.InputTable.setValueAt("", i, 0);
            this.InputTable.setValueAt("", i, 1);
            this.InputTable.setValueAt("R", i, 2);
        }
    }

    private void setInputTable(String strTrans) {
        String[] aux;

        aux = strTrans.split(";");
        this.InputTable.setValueAt(aux[0], 0, 0);
        this.InputTable.setValueAt(aux[1], 0, 1);
        this.InputTable.setValueAt(aux[2], 0, 2);
    }

    public class MeuPanel extends javax.swing.JPanel {

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddLineBtn;
    private javax.swing.JPanel AutomatoLayout;
    private javax.swing.JComboBox<String> CBDirection;
    private javax.swing.JMenuItem CriarLabel_PopUpItem3;
    private javax.swing.JPanel EstadosBtnPanel;
    private javax.swing.JButton ExecBtn;
    private javax.swing.JButton ExitMultBtn;
    private javax.swing.JButton ExitStepBtn;
    private javax.swing.JMenu File_menu;
    private javax.swing.JTable InputTable;
    private javax.swing.JPopupMenu Menu;
    private javax.swing.JMenu Menu1;
    private javax.swing.JTable MultEntradaTable;
    private javax.swing.JPanel MultEntradassBtnPanel;
    private javax.swing.JScrollPane MultScrollPane1;
    private javax.swing.JPanel PanelAutomato;
    private javax.swing.JPanel PanelMultEntradas;
    private javax.swing.JPanel PanelStep;
    private javax.swing.JCheckBoxMenuItem PopUpItem1;
    private javax.swing.JCheckBoxMenuItem PopUpItem2;
    private javax.swing.JButton StepBtn;
    private javax.swing.JPanel StepBtnPanel;
    private javax.swing.JScrollPane StepPanel;
    private javax.swing.JLabel StringLabel;
    private javax.swing.JTextPane TPFita1;
    private javax.swing.JTextPane TPFita2;
    private javax.swing.JTextPane TPFita3;
    private javax.swing.JTextPane TPFita4;
    private javax.swing.JTextPane TPFita5;
    private javax.swing.JScrollPane TabelPanel;
    private javax.swing.JPanel TablePanel;
    private javax.swing.JScrollPane TelaPanel;
    private javax.swing.JButton arrastarButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JMenuItem load_menu;
    private javax.swing.JMenuItem mi_Exe1;
    private javax.swing.JMenuItem mi_ExeStep;
    private javax.swing.JMenuItem mi_MultEntradas;
    private javax.swing.JMenuItem novaMaquinaMenu;
    private javax.swing.JButton novaTransButton;
    private javax.swing.JButton novoEstadoButton;
    private javax.swing.JLabel numItLabel;
    private javax.swing.JButton removerButton;
    private javax.swing.JMenuItem save_menu;
    // End of variables declaration//GEN-END:variables
}
